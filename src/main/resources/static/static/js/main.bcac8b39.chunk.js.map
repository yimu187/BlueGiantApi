{"version":3,"sources":["components/WelcomePage/index.js","components/NewRecordPage/index.js","components/ListPage/index.js","components/SigninPage/index.js","components/SignupPage/index.js","App.js","serviceWorker.js","index.js"],"names":["WelcomePage","react_default","a","createElement","style","textAlign","NewRecordPage","props","modelOpened","onDeleteClick","onSaveClick","onRenewClick","Form","Group","display","Field","Input","placeholder","id","value","formData","ad","onChange","onFormDataChanged","soyad","TextArea","adres","Button","floated","primary","onClick","color","textAlingCenter","ListPage","tableData","onIconClick","loading","Dimmer","active","Loader","Table","celled","Header","Row","HeaderCell","width","Body","map","tableItem","key","Cell","Icon","name","SinginPage","Grid","height","verticalAlign","Column","maxWidth","as","Image","src","size","Segment","stacked","fluid","icon","iconPosition","username","onSignFormDataChanged","type","password","onSigninClick","Message","href","onOpenSignupFormClick","SingupPage","signupEmail","onSignupClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeItem","windowFormData","confirmOpened","signinUsername","signinPassword","showSignin","jwt","signupUsername","signupPassword","showSignup","checkLoginInfo","self","assertThisInitialized","axios","get","then","response","data","success","setState","catch","error","console","log","field","event","setConfirmWindowOpened","config","headers","Authorization","post","message","dto","notifySuccess","notifyFailure","sendLogoutRequest","window","location","reload","handleItemClick","e","_ref","sendListRequest","list","toast","position","POSITION","TOP_RIGHT","autoClose","setModelOpened","filteredItems","filter","tableDataItem","length","filterdItem","onConfirmCancel","onConfirmed","delete","obj","signupRequest","email","role","signinRequest","bind","document","title","opened","_this2","_this$state","welcomPage","newRecord","listing","react_toastify_esm","Menu","vertical","tabular","Item","stretched","components_WelcomePage","components_NewRecordPage","components_ListPage","Modal","onClose","onOpen","open","Content","Confirm","content","cancelButton","confirmButton","onCancel","onConfirm","SigninPage","SignupPage","Component","Boolean","hostname","match","styleLink","rel","head","appendChild","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bcac8b39.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WelcomePage = () => {\r\n\r\n    return (<div style={{textAlign: 'center'}}>\r\n        Bilgi Giriş Uygulamasına Hoş Geldiniz\r\n    </div>)\r\n}\r\n\r\nexport default WelcomePage","import React from 'react';\r\nimport {Form, Input, Button, TextArea} from 'semantic-ui-react';\r\n\r\n\r\nconst NewRecordPage = (props) => {\r\n\r\n    const {modelOpened, onDeleteClick, onSaveClick, onRenewClick} = props;\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Form >\r\n                <Form.Group  style={{display: 'none'}}>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'id'}\r\n                            id=\"id\"\r\n                            value={props.formData.id}\r\n                            // onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'Ad Bilgisi giriniz'}\r\n                            id=\"ad\"\r\n                            value={props.formData.ad}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Input\r\n                            placeholder={'Soyad Bilgisi giriniz'}\r\n                            id=\"soyad\"\r\n                            value={props.formData.soyad}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <TextArea\r\n                            placeholder={'Adres Bilgisi giriniz'}\r\n                            id=\"adres\"\r\n                            value={props.formData.adres}\r\n                            onChange={props.onFormDataChanged}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button floated='right' primary onClick={onSaveClick} >Kaydet</Button>\r\n            {modelOpened && (<Button color='red' floated='right' onClick={onDeleteClick} >Sil</Button>)}\r\n            {!modelOpened && (<Button floated='right' onClick={onRenewClick} >Yenile</Button>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewRecordPage;","import React from 'react'\r\nimport { Icon, Dimmer, Loader,  Table } from 'semantic-ui-react'\r\n\r\nconst textAlingCenter = {textAlign: 'center'};\r\n\r\nconst ListPage = (props) => {\r\n\r\n    const { tableData, onIconClick, loading } = props;\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Dimmer active={loading}>\r\n                <Loader>Yükleniyor</Loader>\r\n            </Dimmer>\r\n\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell width={5} style={textAlingCenter}>Ad</Table.HeaderCell>\r\n                        <Table.HeaderCell width={5} style={textAlingCenter}>Soyad</Table.HeaderCell>\r\n                        <Table.HeaderCell width={10} style={textAlingCenter}>Adres</Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} style={textAlingCenter}>İşlem</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {tableData.map((tableItem) => {\r\n                        return (\r\n                            <Table.Row celled key={tableItem.id}>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.ad}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.soyad}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>{tableItem.adres}</Table.Cell>\r\n                                <Table.Cell style={textAlingCenter}>\r\n                                    <Icon name='pencil' id={tableItem.id} onClick={onIconClick}/>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        )\r\n                    })}\r\n                </Table.Body>\r\n            </Table>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\nimport {Button, Form, Grid, Header, Image, Segment, Message} from 'semantic-ui-react'\r\n\r\nconst SinginPage = (props) => {\r\n\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='teal' textAlign='center'>\r\n                    <Image src='/logo.png' /> Log-in to your account\r\n                </Header>\r\n                <Form size='large'>\r\n                    <Segment stacked>\r\n                        <Form.Input\r\n                            id={'signinUsername'}\r\n                            fluid\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='Username'\r\n                            value={props.username}\r\n                            onChange={props.onSignFormDataChanged}\r\n                        />\r\n                        <Form.Input\r\n                            id={'signinPassword'}\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            value={props.password}\r\n                            onChange={props.onSignFormDataChanged}\r\n                        />\r\n\r\n                        <Button color='teal' fluid size='large' onClick={props.onSigninClick}>\r\n                            Login\r\n                        </Button>\r\n                    </Segment>\r\n                </Form>\r\n                <Message>\r\n                    New to us? <a href='#' onClick={props.onOpenSignupFormClick}>Sign Up</a>\r\n                </Message>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SinginPage;","import React from 'react';\r\nimport {Button, Form, Grid, Header, Image, Segment} from \"semantic-ui-react\";\r\n\r\nconst SingupPage = (props) => {\r\n\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                <Header as='h2' color='teal' textAlign='center'>\r\n                    <Image src='/logo.png' /> Log-in to your account\r\n                </Header>\r\n                <Form size='large'>\r\n                    <Segment stacked>\r\n                        <Form.Input\r\n                            id={'signupUsername'}\r\n                            fluid\r\n                            icon='user'\r\n                            iconPosition='left'\r\n                            placeholder='Username'\r\n                            value={props.username}\r\n                            onChange={props.onSignFormDataChanged}\r\n                        />\r\n                        <Form.Input\r\n                            id={'signupPassword'}\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            value={props.password}\r\n                            onChange={props.onSignFormDataChanged}\r\n                        />\r\n                        <Form.Input\r\n                            id={'signupEmail'}\r\n                            fluid\r\n                            icon='mail'\r\n                            iconPosition='left'\r\n                            placeholder='E-mail address'\r\n                            value={props.signupEmail}\r\n                            onChange={props.onSignFormDataChanged}\r\n                        />\r\n\r\n                        <Button color='teal' fluid size='large' onClick={props.onSignupClick}>\r\n                            Signup\r\n                        </Button>\r\n                    </Segment>\r\n                </Form>\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SingupPage;","import React, {Component} from 'react';\nimport './App.css';\nimport {Grid, Menu, Segment, Modal, Confirm} from 'semantic-ui-react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport WelcomePage from \"./components/WelcomePage\";\nimport NewRecordPage from \"./components/NewRecordPage\";\nimport ListPage from \"./components/ListPage\";\nimport SinginPage from \"./components/SigninPage\";\nimport SignupPage from \"./components/SignupPage\";\n\n\nclass App extends Component {\n\n    state = {\n        modelOpened: false,\n        activeItem: 'Giriş',\n        formData: {\n            id: null,\n            ad: '',\n            soyad: '',\n            adres: '',\n        },\n        windowFormData: {\n            id: null,\n            ad: '',\n            soyad: '',\n            adres: '',\n        },\n        tableData:[],\n        loading: false,\n        confirmOpened: false,\n        signinUsername: '',\n        signinPassword: '',\n        showSignin: true,\n        jwt: null,\n        signupUsername: '',\n        signupPassword: '',\n        signupEmail: '',\n        showSignup: false,\n    }\n\n    constructor(){\n        super();\n        this.onFormDataChanged = this.onFormDataChanged.bind(this);\n\n        document.title = 'Task Page';\n    }\n\n    componentDidMount() {\n        this.checkLoginInfo();\n    }\n\n    checkLoginInfo = () => {\n        const url = \"/api/auth/loginInfo\"\n        const self = this;\n        axios.get(url)\n            .then(function (response) {\n                const { data } = response;\n                const { success, jwt } = data;\n                if(success === true){\n                    self.setState({\n                        jwt,\n                        showSignin: jwt == null\n                    });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    onFormDataChanged = (field, event) =>  {\n\n        const { state } = this;\n        const { modelOpened } = state;\n        if(!modelOpened){\n            const { id, value } = event\n            const formData = this.state.formData;\n            formData[id] = value;\n            this.setState(formData);\n        }else{\n            const { id, value } = event\n            const windowFormData = this.state.windowFormData;\n            windowFormData[id] = value;\n            this.setState(windowFormData);\n        }\n\n    }\n\n    onDeleteClick = () => {\n        this.setConfirmWindowOpened(true);\n    }\n\n    onRenewClick = () => {\n        this.setState({\n            formData: {\n                id: null,\n                ad: '',\n                soyad: '',\n                adres: '',\n            }\n        })\n    }\n\n    onSaveClick = () => {\n\n        const { state } = this;\n        const { modelOpened, jwt } = state;\n\n        const formData = !modelOpened ? this.state.formData : this.state.windowFormData;\n        var self = this;\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + jwt,\n            }\n        }\n        axios.post('/formData', formData, config)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, dto } = data;\n                if(success === true){\n                    self.notifySuccess(message);\n                    if(modelOpened){\n                        self.setState({\n                            windowFormData: dto\n                        });\n                    }else{\n                        self.setState({\n                            formData: dto\n                        });\n                    }\n                }else{\n                    self.notifyFailure(message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n            });\n    };\n\n    sendLogoutRequest = () => {\n        const self = this;\n        const url = \"/api/auth/logout\"\n        axios.post(url)\n            .then(function (response) {\n                console.log(response);\n                window.location.reload();\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n            });\n    }\n\n    handleItemClick = (e, { name }) => {\n        if(name === 'Listeleme'){\n            this.sendListRequest();\n        }\n        this.setState({ activeItem: name })\n        if(name === 'Çıkış'){\n            this.sendLogoutRequest();\n        }\n    };\n\n    sendListRequest = () => {\n        var self = this;\n        const url = '/formData';\n        this.setState({loading: true})\n        let config = {\n            headers: {\n                Authorization: 'Bearer ' + this.state.jwt,\n            }\n        };\n        axios.get(url, config)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, list } = data;\n                if(success === true){\n                    self.notifySuccess(message);\n                    self.setState({\n                        tableData: list,\n                        loading:false\n                    });\n                }else{\n                    self.notifyFailure(message);\n                    self.setState({\n                        loading:false\n                    });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.setState({\n                    tableData: [{id: 1, ad: 'adi', soyad: 'soyad', adres: 'adres'}, {id: 2, ad: 'adi', soyad: 'soyad', adres: 'adres'}],\n                    loading:false\n                });\n            })\n    }\n\n    notifySuccess = (message) => {\n        toast.success(message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000,\n        });\n    }\n\n    notifyFailure = (message)  =>{\n        toast.error(message, {\n            position: toast.POSITION.TOP_RIGHT,\n            autoClose: 5000,\n        });\n    }\n\n    setModelOpened = (modelOpened) => {\n        this.setState({\n            modelOpened\n        })\n    }\n\n    onIconClick = (event, field) => {\n        const {id} = field;\n        const {tableData} = this.state;\n\n        const filteredItems = tableData.filter(tableDataItem => {\n            return tableDataItem.id === id\n        });\n        if(filteredItems.length > 0){\n            const filterdItem = filteredItems[0];\n            this.setState({\n                modelOpened: true,\n                windowFormData: filterdItem\n            })\n        }else {\n            this.notifyFailure(id + \" numaralı kayıt liste içinde bulunamıştır\");\n        }\n    }\n\n    onConfirmCancel = () => {\n        this.setConfirmWindowOpened(false);\n    }\n\n    setConfirmWindowOpened(opened) {\n        this.setState({\n            confirmOpened: opened\n        })\n    }\n\n    onConfirmed = () => {\n        const { state } = this;\n        const { modelOpened } = state;\n\n        if(modelOpened){\n            const windowFormData = this.state.windowFormData;\n\n            var self = this;\n            axios.delete('/formData',\n                {\n                    data: windowFormData,\n                    headers: {\n                        Authorization: 'Bearer ' + this.state.jwt,\n                    }\n                }\n\n            )\n                .then(function (response) {\n                    const { data } = response;\n                    const { success, message } = data;\n                    if(success === true){\n                        self.notifySuccess(message);\n                        self.setModelOpened(false);\n                        self.sendListRequest();\n                        self.setConfirmWindowOpened(false);\n\n                    }else{\n                        self.notifyFailure(message);\n                    }\n                })\n                .catch(function (error) {\n                    console.log(error);\n                    self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n                });\n        }\n    }\n\n    onSignFormDataChanged = (field, event) => {\n        const {id, value} = event;\n        const obj = {};\n        obj[id]=  value;\n        this.setState(obj)\n    }\n\n    onOpenSignupFormClick= () => {\n        this.setState({\n            showSignup: true,\n            showSignin: false,\n        })\n    }\n    onSignupClick = () => {\n        var self = this;\n        const url = '/api/auth/signup';\n        const signupRequest = {\n            username: this.state.signupUsername,\n            password: this.state.signupPassword,\n            email: this.state.signupEmail,\n            role:['ROLE_USER']\n        }\n        axios.post(url, signupRequest)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, jwt } = data;\n                if(success === true){\n                    self.setState({\n                        jwt,\n                        showSignup: false\n                    });\n                }else{\n                    self.notifyFailure(message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n            });\n    }\n\n    onSigninClick = () => {\n\n        var self = this;\n        const url = '/api/auth/signin';\n        const signinRequest = {\n            username: this.state.signinUsername,\n            password: this.state.signinPassword,\n        }\n        axios.post(url, signinRequest)\n            .then(function (response) {\n                const { data } = response;\n                const { success, message, jwt } = data;\n                if(success === true){\n                    self.setState({\n                        jwt,\n                        showSignin: false\n                    });\n                }else{\n                    self.notifyFailure(message);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n                self.notifyFailure(\"Hata Durum oluşmuştur. Lütfen Sistem Yöneticiniz ile görüşünüz\");\n            });\n\n    }\n\n    render() {\n        const {\n            activeItem,\n            formData,\n            tableData,\n            modelOpened,\n            windowFormData,\n            loading,\n            confirmOpened,\n            signinUsername,\n            signinPassword,\n            showSignin,\n            signupUsername,\n            signupPassword,\n            showSignup,\n        } = this.state\n        const welcomPage = activeItem === 'Giriş';\n        const newRecord = activeItem === 'Yeni Kayıt' ;\n        const listing = activeItem === 'Listeleme';\n\n        return (\n            <div>\n                <ToastContainer />\n                {!showSignin && !showSignup && (<Grid>\n                    <Grid.Column width={3}>\n                        <Menu fluid vertical tabular>\n                            <Menu.Item\n                                name='Giriş'\n                                active={welcomPage}\n                                onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='Yeni Kayıt'\n                                active={newRecord}\n                                onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='Listeleme'\n                                active={listing}\n                                onClick={this.handleItemClick}\n                            />\n                            <Menu.Item\n                                name='Çıkış'\n                                active={listing}\n                                onClick={this.handleItemClick}\n                            />\n                        </Menu>\n                    </Grid.Column>\n\n                    <Grid.Column stretched width={12}>\n                        <Segment>\n                            {welcomPage && (<WelcomePage/>)}\n                            {newRecord && (<NewRecordPage formData={formData} onFormDataChanged={this.onFormDataChanged}\n                                                          onSaveClick={this.onSaveClick} modelOpened={modelOpened}\n                                                          onRenewClick={this.onRenewClick}/>)}\n                            {listing && (\n                                <ListPage tableData={tableData} onIconClick={this.onIconClick} loading={loading}/>)}\n                        </Segment>\n                    </Grid.Column>\n                </Grid>)\n                }\n\n                <Modal\n                    onClose={() => this.setModelOpened(false)}\n                    onOpen={() => this.setModelOpened(true)}\n                    open={modelOpened}\n                >\n                    <Modal.Content>\n                        <NewRecordPage formData={windowFormData} onFormDataChanged={this.onFormDataChanged} onSaveClick={this.onSaveClick} onDeleteClick={this.onDeleteClick} modelOpened={modelOpened}/>\n                    </Modal.Content>\n                </Modal>\n                <Confirm\n                    open={confirmOpened}\n                    content='Silme işlemi gerçekleştirilecektir. Onaylıyor musunuz?'\n                    cancelButton='İptal Et'\n                    confirmButton=\"Onayla\"\n                    onCancel={this.onConfirmCancel}\n                    onConfirm={this.onConfirmed}\n                />\n                {showSignin && (<SinginPage\n                    username={signinUsername}\n                    password={signinPassword}\n                    onSigninClick={this.onSigninClick}\n                    onSignFormDataChanged={this.onSignFormDataChanged}\n                    onOpenSignupFormClick={this.onOpenSignupFormClick}\n                />)}\n\n                {showSignup && (<SignupPage\n                    username={signupUsername}\n                    password={signupPassword}\n                    onSignupClick={this.onSignupClick}\n                    onSignFormDataChanged={this.onSignFormDataChanged}\n                    onOpenSignupFormClick={this.onOpenSignupFormClick}\n                />)}\n\n            </div>\n\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst styleLink = document.createElement(\"link\");\nstyleLink.rel = \"stylesheet\";\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\ndocument.head.appendChild(styleLink);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}